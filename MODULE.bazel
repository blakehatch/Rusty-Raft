###############################################################################
# Bazel now uses Bzlmod by default to manage external dependencies.
# Please consider migrating your external dependencies from WORKSPACE to MODULE.bazel.
#
# For more details, please check https://github.com/bazelbuild/bazel/issues/18958
###############################################################################

module(
    name = "rusty_raft",
    version = "0.1.0",
    compatibility_level = 0,
)

bazel_dep(
    name = "bazel_skylib",
    version = "1.5.0",
)
bazel_dep(
    name = "rules_rust",
    version = "0.40.0",
)
# local_path_override(
#     module_name = "rusty_raft",
#     path = ".",
# )

rust = use_extension("@rules_rust//rust:extensions.bzl", "rust")
rust.toolchain(edition = "2021")
use_repo(
    rust,
    "rust_toolchains",
)

register_toolchains("@rust_toolchains//:all")

# Fully transient third party dependency setup (Cargo.toml / Cargo.lock as source of truth).
crate = use_extension(
    "@rules_rust//crate_universe:extension.bzl",
    "crate",
)
crate.from_cargo(
    name = "crates",
    cargo_lockfile = "//:Cargo.lock",
    manifests = ["//:Cargo.toml"],
)
use_repo(crate, "crates")
# crate.annotation(
#     additive_build_file = "//:BUILD",
#     crate = "anyhow",
#     # Defined in additive_build_file.
#     data = [":cargo_toml"],
#     # Optional, you probably don't need this. Defaults to all from_cargo
#     # invocations in this module.
#     repositories = ["crates"],
#     # Optional, you probably don't need this, defaults to "*".
#     version = "*",
# )